/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosResponse } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ConnectedComponent } from '../models';
/**
 * ConnectedComponentsApi - axios parameter creator
 * @export
 */
export declare const ConnectedComponentsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * List all connected components of a project
     * @summary Get project connected components
     * @param {string} projectId Project id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectConnectedComponents: (projectId: string, limit?: number | undefined, offset?: number | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * List all connected components of a project
     * @summary Get styleguide connected components
     * @param {string} styleguideId Styleguide id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {string} [linkedProject] Reference project id
     * @param {string} [linkedStyleguide] Reference styleguide id
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStyleguideConnectedComponents: (styleguideId: string, limit?: number | undefined, offset?: number | undefined, linkedProject?: string | undefined, linkedStyleguide?: string | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * ConnectedComponentsApi - functional programming interface
 * @export
 */
export declare const ConnectedComponentsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * List all connected components of a project
     * @summary Get project connected components
     * @param {string} projectId Project id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectConnectedComponents(projectId: string, limit?: number | undefined, offset?: number | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * List all connected components of a project
     * @summary Get styleguide connected components
     * @param {string} styleguideId Styleguide id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {string} [linkedProject] Reference project id
     * @param {string} [linkedStyleguide] Reference styleguide id
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStyleguideConnectedComponents(styleguideId: string, limit?: number | undefined, offset?: number | undefined, linkedProject?: string | undefined, linkedStyleguide?: string | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
};
/**
 * Search parameters for getProjectConnectedComponents operation in ConnectedComponentsApi.
 * @export
 * @interface ConnectedComponentsApiGetProjectConnectedComponentsSearchParams
 */
export interface ConnectedComponentsApiGetProjectConnectedComponentsSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof ConnectedComponentsApiGetProjectConnectedComponentsSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof ConnectedComponentsApiGetProjectConnectedComponentsSearchParams
     */
    readonly offset?: number;
    /**
     * Whether to include linked styleguides or not
     * @type {boolean}
     * @memberof ConnectedComponentsApiGetProjectConnectedComponentsSearchParams
     */
    readonly includeLinkedStyleguides?: boolean;
}
/**
 * Search parameters for getStyleguideConnectedComponents operation in ConnectedComponentsApi.
 * @export
 * @interface ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams
 */
export interface ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams
     */
    readonly offset?: number;
    /**
     * Reference project id
     * @type {string}
     * @memberof ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams
     */
    readonly linkedProject?: string;
    /**
     * Reference styleguide id
     * @type {string}
     * @memberof ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams
     */
    readonly linkedStyleguide?: string;
    /**
     * Whether to include linked styleguides or not
     * @type {boolean}
     * @memberof ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams
     */
    readonly includeLinkedStyleguides?: boolean;
}
/**
 * ConnectedComponentsApi - object-oriented interface
 * @export
 * @class ConnectedComponentsApi
 * @extends {BaseAPI}
 */
export declare class ConnectedComponentsApi extends BaseAPI {
    /**
     * List all connected components of a project
     * @summary Get project connected components
     * @param {string} projectId Project id
     * @param {ConnectedComponentsApiGetProjectConnectedComponentsSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConnectedComponentsApi
     */
    getProjectConnectedComponents(projectId: string, searchParams?: ConnectedComponentsApiGetProjectConnectedComponentsSearchParams, options?: any): Promise<AxiosResponse<Array<ConnectedComponent>>>;
    /**
     * List all connected components of a project
     * @summary Get styleguide connected components
     * @param {string} styleguideId Styleguide id
     * @param {ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConnectedComponentsApi
     */
    getStyleguideConnectedComponents(styleguideId: string, searchParams?: ConnectedComponentsApiGetStyleguideConnectedComponentsSearchParams, options?: any): Promise<AxiosResponse<Array<ConnectedComponent>>>;
}
