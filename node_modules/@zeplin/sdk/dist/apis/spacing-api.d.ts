/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosResponse } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { SpacingSection } from '../models';
import { SpacingToken } from '../models';
import { SpacingTokenUpdateBody } from '../models';
/**
 * SpacingApi - axios parameter creator
 * @export
 */
export declare const SpacingApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * List all spacing sections of the project
     * @summary Get spacing sections of the project
     * @param {string} projectId Project id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectSpacingSections: (projectId: string, limit?: number | undefined, offset?: number | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * List all spacing tokens of the project
     * @summary Get spacing tokens of the project
     * @param {string} projectId Project id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectSpacingTokens: (projectId: string, limit?: number | undefined, offset?: number | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * List all spacing sections of the styleguide that user has access.  See [Styleguide docs](#getstyleguide) for more details about how `linked_project` and `linked_styleguide` parameters can be used to retrieve resources from styleguides that user is eligible to access.
     * @summary Get spacing sections of the styleguide
     * @param {string} styleguideId Styleguide id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {string} [linkedProject] Reference project id
     * @param {string} [linkedStyleguide] Reference styleguide id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStyleguideSpacingSections: (styleguideId: string, limit?: number | undefined, offset?: number | undefined, linkedProject?: string | undefined, linkedStyleguide?: string | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * List all spacing tokens of the styleguide that user has access.  See [Styleguide docs](#getstyleguide) for more details about how `linked_project` and `linked_styleguide` parameters can be used to retrieve resources from styleguides that user is eligible to access.
     * @summary Get spacing tokens of the styleguide
     * @param {string} styleguideId Styleguide id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {string} [linkedProject] Reference project id
     * @param {string} [linkedStyleguide] Reference styleguide id
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStyleguideSpacingTokens: (styleguideId: string, limit?: number | undefined, offset?: number | undefined, linkedProject?: string | undefined, linkedStyleguide?: string | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Update a spacing token in the project\'s local styleguide
     * @summary Update project spacing token
     * @param {string} projectId Project id
     * @param {string} spacingTokenId Spacing token id
     * @param {SpacingTokenUpdateBody} spacingTokenUpdateBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProjectSpacingToken: (projectId: string, spacingTokenId: string, spacingTokenUpdateBody: SpacingTokenUpdateBody, options?: any) => Promise<RequestArgs>;
    /**
     * Update a spacing token in the styleguide
     * @summary Update styleguide spacing token
     * @param {string} styleguideId Styleguide id
     * @param {string} spacingTokenId Spacing token id
     * @param {SpacingTokenUpdateBody} spacingTokenUpdateBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateStyleguideSpacingToken: (styleguideId: string, spacingTokenId: string, spacingTokenUpdateBody: SpacingTokenUpdateBody, options?: any) => Promise<RequestArgs>;
};
/**
 * SpacingApi - functional programming interface
 * @export
 */
export declare const SpacingApiFp: (configuration?: Configuration | undefined) => {
    /**
     * List all spacing sections of the project
     * @summary Get spacing sections of the project
     * @param {string} projectId Project id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectSpacingSections(projectId: string, limit?: number | undefined, offset?: number | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * List all spacing tokens of the project
     * @summary Get spacing tokens of the project
     * @param {string} projectId Project id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProjectSpacingTokens(projectId: string, limit?: number | undefined, offset?: number | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * List all spacing sections of the styleguide that user has access.  See [Styleguide docs](#getstyleguide) for more details about how `linked_project` and `linked_styleguide` parameters can be used to retrieve resources from styleguides that user is eligible to access.
     * @summary Get spacing sections of the styleguide
     * @param {string} styleguideId Styleguide id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {string} [linkedProject] Reference project id
     * @param {string} [linkedStyleguide] Reference styleguide id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStyleguideSpacingSections(styleguideId: string, limit?: number | undefined, offset?: number | undefined, linkedProject?: string | undefined, linkedStyleguide?: string | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * List all spacing tokens of the styleguide that user has access.  See [Styleguide docs](#getstyleguide) for more details about how `linked_project` and `linked_styleguide` parameters can be used to retrieve resources from styleguides that user is eligible to access.
     * @summary Get spacing tokens of the styleguide
     * @param {string} styleguideId Styleguide id
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {string} [linkedProject] Reference project id
     * @param {string} [linkedStyleguide] Reference styleguide id
     * @param {boolean} [includeLinkedStyleguides] Whether to include linked styleguides or not
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStyleguideSpacingTokens(styleguideId: string, limit?: number | undefined, offset?: number | undefined, linkedProject?: string | undefined, linkedStyleguide?: string | undefined, includeLinkedStyleguides?: boolean | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * Update a spacing token in the project\'s local styleguide
     * @summary Update project spacing token
     * @param {string} projectId Project id
     * @param {string} spacingTokenId Spacing token id
     * @param {SpacingTokenUpdateBody} spacingTokenUpdateBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateProjectSpacingToken(projectId: string, spacingTokenId: string, spacingTokenUpdateBody: SpacingTokenUpdateBody, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * Update a spacing token in the styleguide
     * @summary Update styleguide spacing token
     * @param {string} styleguideId Styleguide id
     * @param {string} spacingTokenId Spacing token id
     * @param {SpacingTokenUpdateBody} spacingTokenUpdateBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateStyleguideSpacingToken(styleguideId: string, spacingTokenId: string, spacingTokenUpdateBody: SpacingTokenUpdateBody, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
};
/**
 * Search parameters for getProjectSpacingSections operation in SpacingApi.
 * @export
 * @interface SpacingApiGetProjectSpacingSectionsSearchParams
 */
export interface SpacingApiGetProjectSpacingSectionsSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof SpacingApiGetProjectSpacingSectionsSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof SpacingApiGetProjectSpacingSectionsSearchParams
     */
    readonly offset?: number;
}
/**
 * Search parameters for getProjectSpacingTokens operation in SpacingApi.
 * @export
 * @interface SpacingApiGetProjectSpacingTokensSearchParams
 */
export interface SpacingApiGetProjectSpacingTokensSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof SpacingApiGetProjectSpacingTokensSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof SpacingApiGetProjectSpacingTokensSearchParams
     */
    readonly offset?: number;
    /**
     * Whether to include linked styleguides or not
     * @type {boolean}
     * @memberof SpacingApiGetProjectSpacingTokensSearchParams
     */
    readonly includeLinkedStyleguides?: boolean;
}
/**
 * Search parameters for getStyleguideSpacingSections operation in SpacingApi.
 * @export
 * @interface SpacingApiGetStyleguideSpacingSectionsSearchParams
 */
export interface SpacingApiGetStyleguideSpacingSectionsSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof SpacingApiGetStyleguideSpacingSectionsSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof SpacingApiGetStyleguideSpacingSectionsSearchParams
     */
    readonly offset?: number;
    /**
     * Reference project id
     * @type {string}
     * @memberof SpacingApiGetStyleguideSpacingSectionsSearchParams
     */
    readonly linkedProject?: string;
    /**
     * Reference styleguide id
     * @type {string}
     * @memberof SpacingApiGetStyleguideSpacingSectionsSearchParams
     */
    readonly linkedStyleguide?: string;
}
/**
 * Search parameters for getStyleguideSpacingTokens operation in SpacingApi.
 * @export
 * @interface SpacingApiGetStyleguideSpacingTokensSearchParams
 */
export interface SpacingApiGetStyleguideSpacingTokensSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof SpacingApiGetStyleguideSpacingTokensSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof SpacingApiGetStyleguideSpacingTokensSearchParams
     */
    readonly offset?: number;
    /**
     * Reference project id
     * @type {string}
     * @memberof SpacingApiGetStyleguideSpacingTokensSearchParams
     */
    readonly linkedProject?: string;
    /**
     * Reference styleguide id
     * @type {string}
     * @memberof SpacingApiGetStyleguideSpacingTokensSearchParams
     */
    readonly linkedStyleguide?: string;
    /**
     * Whether to include linked styleguides or not
     * @type {boolean}
     * @memberof SpacingApiGetStyleguideSpacingTokensSearchParams
     */
    readonly includeLinkedStyleguides?: boolean;
}
/**
 * SpacingApi - object-oriented interface
 * @export
 * @class SpacingApi
 * @extends {BaseAPI}
 */
export declare class SpacingApi extends BaseAPI {
    /**
     * List all spacing sections of the project
     * @summary Get spacing sections of the project
     * @param {string} projectId Project id
     * @param {SpacingApiGetProjectSpacingSectionsSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpacingApi
     */
    getProjectSpacingSections(projectId: string, searchParams?: SpacingApiGetProjectSpacingSectionsSearchParams, options?: any): Promise<AxiosResponse<Array<SpacingSection>>>;
    /**
     * List all spacing tokens of the project
     * @summary Get spacing tokens of the project
     * @param {string} projectId Project id
     * @param {SpacingApiGetProjectSpacingTokensSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpacingApi
     */
    getProjectSpacingTokens(projectId: string, searchParams?: SpacingApiGetProjectSpacingTokensSearchParams, options?: any): Promise<AxiosResponse<Array<SpacingToken>>>;
    /**
     * List all spacing sections of the styleguide that user has access.  See [Styleguide docs](#getstyleguide) for more details about how `linked_project` and `linked_styleguide` parameters can be used to retrieve resources from styleguides that user is eligible to access.
     * @summary Get spacing sections of the styleguide
     * @param {string} styleguideId Styleguide id
     * @param {SpacingApiGetStyleguideSpacingSectionsSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpacingApi
     */
    getStyleguideSpacingSections(styleguideId: string, searchParams?: SpacingApiGetStyleguideSpacingSectionsSearchParams, options?: any): Promise<AxiosResponse<Array<SpacingSection>>>;
    /**
     * List all spacing tokens of the styleguide that user has access.  See [Styleguide docs](#getstyleguide) for more details about how `linked_project` and `linked_styleguide` parameters can be used to retrieve resources from styleguides that user is eligible to access.
     * @summary Get spacing tokens of the styleguide
     * @param {string} styleguideId Styleguide id
     * @param {SpacingApiGetStyleguideSpacingTokensSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpacingApi
     */
    getStyleguideSpacingTokens(styleguideId: string, searchParams?: SpacingApiGetStyleguideSpacingTokensSearchParams, options?: any): Promise<AxiosResponse<Array<SpacingToken>>>;
    /**
     * Update a spacing token in the project\'s local styleguide
     * @summary Update project spacing token
     * @param {string} projectId Project id
     * @param {string} spacingTokenId Spacing token id
     * @param {SpacingTokenUpdateBody} spacingTokenUpdateBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpacingApi
     */
    updateProjectSpacingToken(projectId: string, spacingTokenId: string, spacingTokenUpdateBody: SpacingTokenUpdateBody, options?: any): Promise<AxiosResponse<void>>;
    /**
     * Update a spacing token in the styleguide
     * @summary Update styleguide spacing token
     * @param {string} styleguideId Styleguide id
     * @param {string} spacingTokenId Spacing token id
     * @param {SpacingTokenUpdateBody} spacingTokenUpdateBody
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpacingApi
     */
    updateStyleguideSpacingToken(styleguideId: string, spacingTokenId: string, spacingTokenUpdateBody: SpacingTokenUpdateBody, options?: any): Promise<AxiosResponse<void>>;
}
