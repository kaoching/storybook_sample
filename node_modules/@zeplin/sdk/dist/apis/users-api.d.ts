/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosResponse } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Project } from '../models';
import { ProjectStatusEnum } from '../models';
import { Styleguide } from '../models';
import { StyleguideStatusEnum } from '../models';
import { User } from '../models';
/**
 * UsersApi - axios parameter creator
 * @export
 */
export declare const UsersApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Get current user\'s details
     * @summary Current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCurrentUser: (options?: any) => Promise<RequestArgs>;
    /**
     * List all projects that belong to the current user
     * @summary Get personal projects
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {ProjectStatusEnum} [status] Filter by status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserProjects: (limit?: number | undefined, offset?: number | undefined, status?: ProjectStatusEnum | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * List all styleguides that belong to the current user
     * @summary Get personal styleguides
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {StyleguideStatusEnum} [status] Filter by status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserStyleguides: (limit?: number | undefined, offset?: number | undefined, status?: StyleguideStatusEnum | undefined, options?: any) => Promise<RequestArgs>;
};
/**
 * UsersApi - functional programming interface
 * @export
 */
export declare const UsersApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Get current user\'s details
     * @summary Current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCurrentUser(options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * List all projects that belong to the current user
     * @summary Get personal projects
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {ProjectStatusEnum} [status] Filter by status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserProjects(limit?: number | undefined, offset?: number | undefined, status?: ProjectStatusEnum | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
    /**
     * List all styleguides that belong to the current user
     * @summary Get personal styleguides
     * @param {number} [limit] Pagination limit
     * @param {number} [offset] Pagination offset
     * @param {StyleguideStatusEnum} [status] Filter by status
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserStyleguides(limit?: number | undefined, offset?: number | undefined, status?: StyleguideStatusEnum | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<any>>;
};
/**
 * Search parameters for getUserProjects operation in UsersApi.
 * @export
 * @interface UsersApiGetUserProjectsSearchParams
 */
export interface UsersApiGetUserProjectsSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof UsersApiGetUserProjectsSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof UsersApiGetUserProjectsSearchParams
     */
    readonly offset?: number;
    /**
     * Filter by status
     * @type {ProjectStatusEnum}
     * @memberof UsersApiGetUserProjectsSearchParams
     */
    readonly status?: ProjectStatusEnum;
}
/**
 * Search parameters for getUserStyleguides operation in UsersApi.
 * @export
 * @interface UsersApiGetUserStyleguidesSearchParams
 */
export interface UsersApiGetUserStyleguidesSearchParams {
    /**
     * Pagination limit
     * @type {number}
     * @memberof UsersApiGetUserStyleguidesSearchParams
     */
    readonly limit?: number;
    /**
     * Pagination offset
     * @type {number}
     * @memberof UsersApiGetUserStyleguidesSearchParams
     */
    readonly offset?: number;
    /**
     * Filter by status
     * @type {StyleguideStatusEnum}
     * @memberof UsersApiGetUserStyleguidesSearchParams
     */
    readonly status?: StyleguideStatusEnum;
}
/**
 * UsersApi - object-oriented interface
 * @export
 * @class UsersApi
 * @extends {BaseAPI}
 */
export declare class UsersApi extends BaseAPI {
    /**
     * Get current user\'s details
     * @summary Current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getCurrentUser(options?: any): Promise<AxiosResponse<User>>;
    /**
     * List all projects that belong to the current user
     * @summary Get personal projects
     * @param {UsersApiGetUserProjectsSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getUserProjects(searchParams?: UsersApiGetUserProjectsSearchParams, options?: any): Promise<AxiosResponse<Array<Project>>>;
    /**
     * List all styleguides that belong to the current user
     * @summary Get personal styleguides
     * @param {UsersApiGetUserStyleguidesSearchParams} [searchParams] Search parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getUserStyleguides(searchParams?: UsersApiGetUserStyleguidesSearchParams, options?: any): Promise<AxiosResponse<Array<Styleguide>>>;
}
