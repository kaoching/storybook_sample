"use strict";

require("core-js/modules/es.object.define-property.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformStyleguideMemberEventToJSON = exports.transformJSONToStyleguideMemberEvent = void 0;

var _styleguideMemberInvitedEvent = require("./styleguide-member-invited-event");

var _styleguideMemberRemovedEvent = require("./styleguide-member-removed-event");

var _styleguideMemberRoleUpdatedEvent = require("./styleguide-member-role-updated-event");

/* tslint:disable */

/* eslint-disable */

/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var transformJSONToStyleguideMemberEvent = function transformJSONToStyleguideMemberEvent(value) {
  switch (value.action) {
    case 'invited':
      return (0, _styleguideMemberInvitedEvent.transformJSONToStyleguideMemberInvitedEvent)(value);

    case 'removed':
      return (0, _styleguideMemberRemovedEvent.transformJSONToStyleguideMemberRemovedEvent)(value);

    case 'role_updated':
      return (0, _styleguideMemberRoleUpdatedEvent.transformJSONToStyleguideMemberRoleUpdatedEvent)(value);

    default:
      throw new Error("No variant of StyleguideMemberEvent exists with 'action=".concat(value.action, "'"));
  }
};

exports.transformJSONToStyleguideMemberEvent = transformJSONToStyleguideMemberEvent;

var transformStyleguideMemberEventToJSON = function transformStyleguideMemberEventToJSON(value) {
  switch (value.action) {
    case 'invited':
      return (0, _styleguideMemberInvitedEvent.transformStyleguideMemberInvitedEventToJSON)(value);

    case 'removed':
      return (0, _styleguideMemberRemovedEvent.transformStyleguideMemberRemovedEventToJSON)(value);

    case 'role_updated':
      return (0, _styleguideMemberRoleUpdatedEvent.transformStyleguideMemberRoleUpdatedEventToJSON)(value);
  }
};
/**
 * @type StyleguideMemberEvent
 * This event is used to notify webhooks about changes related to the styleguide\'s members:    - New member invited    - Member removed    - Member\'s role changed 
 * @export
 */


exports.transformStyleguideMemberEventToJSON = transformStyleguideMemberEventToJSON;