"use strict";

require("core-js/modules/es.object.define-property.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformWebhookEventToJSON = exports.transformJSONToWebhookEvent = void 0;

var _pingEvent = require("./ping-event");

var _projectColorEvent = require("./project-color-event");

var _projectComponentEvent = require("./project-component-event");

var _projectFlowBoardEvent = require("./project-flow-board-event");

var _projectMemberEvent = require("./project-member-event");

var _projectNoteCommentEvent = require("./project-note-comment-event");

var _projectNoteEvent = require("./project-note-event");

var _projectScreenEvent = require("./project-screen-event");

var _projectScreenVersionEvent = require("./project-screen-version-event");

var _projectSpacingTokenEvent = require("./project-spacing-token-event");

var _projectTextStyleEvent = require("./project-text-style-event");

var _styleguideColorEvent = require("./styleguide-color-event");

var _styleguideComponentEvent = require("./styleguide-component-event");

var _styleguideMemberEvent = require("./styleguide-member-event");

var _styleguideSpacingTokenEvent = require("./styleguide-spacing-token-event");

var _styleguideTextStyleEvent = require("./styleguide-text-style-event");

var _workspaceNotificationEvent = require("./workspace-notification-event");

var _workspaceOrganizationEvent = require("./workspace-organization-event");

var _workspaceOrganizationMemberEvent = require("./workspace-organization-member-event");

var _workspaceProjectEvent = require("./workspace-project-event");

var _workspaceStyleguideEvent = require("./workspace-styleguide-event");

/* tslint:disable */

/* eslint-disable */

/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var transformJSONToWebhookEvent = function transformJSONToWebhookEvent(value) {
  switch (value.event) {
    case 'ping':
      return (0, _pingEvent.transformJSONToPingEvent)(value);

    case 'project.color':
      return (0, _projectColorEvent.transformJSONToProjectColorEvent)(value);

    case 'project.component':
      return (0, _projectComponentEvent.transformJSONToProjectComponentEvent)(value);

    case 'project.flow_board':
      return (0, _projectFlowBoardEvent.transformJSONToProjectFlowBoardEvent)(value);

    case 'project.member':
      return (0, _projectMemberEvent.transformJSONToProjectMemberEvent)(value);

    case 'project.note':
      return (0, _projectNoteEvent.transformJSONToProjectNoteEvent)(value);

    case 'project.note.comment':
      return (0, _projectNoteCommentEvent.transformJSONToProjectNoteCommentEvent)(value);

    case 'project.screen':
      return (0, _projectScreenEvent.transformJSONToProjectScreenEvent)(value);

    case 'project.screen.version':
      return (0, _projectScreenVersionEvent.transformJSONToProjectScreenVersionEvent)(value);

    case 'project.spacing_token':
      return (0, _projectSpacingTokenEvent.transformJSONToProjectSpacingTokenEvent)(value);

    case 'project.text_style':
      return (0, _projectTextStyleEvent.transformJSONToProjectTextStyleEvent)(value);

    case 'styleguide.color':
      return (0, _styleguideColorEvent.transformJSONToStyleguideColorEvent)(value);

    case 'styleguide.component':
      return (0, _styleguideComponentEvent.transformJSONToStyleguideComponentEvent)(value);

    case 'styleguide.member':
      return (0, _styleguideMemberEvent.transformJSONToStyleguideMemberEvent)(value);

    case 'styleguide.spacing_token':
      return (0, _styleguideSpacingTokenEvent.transformJSONToStyleguideSpacingTokenEvent)(value);

    case 'styleguide.text_style':
      return (0, _styleguideTextStyleEvent.transformJSONToStyleguideTextStyleEvent)(value);

    case 'workspace.notification':
      return (0, _workspaceNotificationEvent.transformJSONToWorkspaceNotificationEvent)(value);

    case 'workspace.organization':
      return (0, _workspaceOrganizationEvent.transformJSONToWorkspaceOrganizationEvent)(value);

    case 'workspace.organization.member':
      return (0, _workspaceOrganizationMemberEvent.transformJSONToWorkspaceOrganizationMemberEvent)(value);

    case 'workspace.project':
      return (0, _workspaceProjectEvent.transformJSONToWorkspaceProjectEvent)(value);

    case 'workspace.styleguide':
      return (0, _workspaceStyleguideEvent.transformJSONToWorkspaceStyleguideEvent)(value);

    default:
      throw new Error("No variant of WebhookEvent exists with 'event=".concat(value.event, "'"));
  }
};

exports.transformJSONToWebhookEvent = transformJSONToWebhookEvent;

var transformWebhookEventToJSON = function transformWebhookEventToJSON(value) {
  switch (value.event) {
    case 'ping':
      return (0, _pingEvent.transformPingEventToJSON)(value);

    case 'project.color':
      return (0, _projectColorEvent.transformProjectColorEventToJSON)(value);

    case 'project.component':
      return (0, _projectComponentEvent.transformProjectComponentEventToJSON)(value);

    case 'project.flow_board':
      return (0, _projectFlowBoardEvent.transformProjectFlowBoardEventToJSON)(value);

    case 'project.member':
      return (0, _projectMemberEvent.transformProjectMemberEventToJSON)(value);

    case 'project.note':
      return (0, _projectNoteEvent.transformProjectNoteEventToJSON)(value);

    case 'project.note.comment':
      return (0, _projectNoteCommentEvent.transformProjectNoteCommentEventToJSON)(value);

    case 'project.screen':
      return (0, _projectScreenEvent.transformProjectScreenEventToJSON)(value);

    case 'project.screen.version':
      return (0, _projectScreenVersionEvent.transformProjectScreenVersionEventToJSON)(value);

    case 'project.spacing_token':
      return (0, _projectSpacingTokenEvent.transformProjectSpacingTokenEventToJSON)(value);

    case 'project.text_style':
      return (0, _projectTextStyleEvent.transformProjectTextStyleEventToJSON)(value);

    case 'styleguide.color':
      return (0, _styleguideColorEvent.transformStyleguideColorEventToJSON)(value);

    case 'styleguide.component':
      return (0, _styleguideComponentEvent.transformStyleguideComponentEventToJSON)(value);

    case 'styleguide.member':
      return (0, _styleguideMemberEvent.transformStyleguideMemberEventToJSON)(value);

    case 'styleguide.spacing_token':
      return (0, _styleguideSpacingTokenEvent.transformStyleguideSpacingTokenEventToJSON)(value);

    case 'styleguide.text_style':
      return (0, _styleguideTextStyleEvent.transformStyleguideTextStyleEventToJSON)(value);

    case 'workspace.notification':
      return (0, _workspaceNotificationEvent.transformWorkspaceNotificationEventToJSON)(value);

    case 'workspace.organization':
      return (0, _workspaceOrganizationEvent.transformWorkspaceOrganizationEventToJSON)(value);

    case 'workspace.organization.member':
      return (0, _workspaceOrganizationMemberEvent.transformWorkspaceOrganizationMemberEventToJSON)(value);

    case 'workspace.project':
      return (0, _workspaceProjectEvent.transformWorkspaceProjectEventToJSON)(value);

    case 'workspace.styleguide':
      return (0, _workspaceStyleguideEvent.transformWorkspaceStyleguideEventToJSON)(value);
  }
};
/**
 * @type WebhookEvent
 * @export
 */


exports.transformWebhookEventToJSON = transformWebhookEventToJSON;