"use strict";

require("core-js/modules/es.object.define-property.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformProjectToJSON = exports.transformJSONToProject = void 0;

require("core-js/modules/es.function.name.js");

require("core-js/modules/es.symbol.js");

require("core-js/modules/es.symbol.description.js");

var _entityReference = require("./entity-reference");

var _organizationSummary = require("./organization-summary");

var _projectStatusEnum = require("./project-status-enum");

var _remPreferences = require("./rem-preferences");

var _workflowStatus = require("./workflow-status");

/* tslint:disable */

/* eslint-disable */

/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var transformProjectToJSON = function transformProjectToJSON(value) {
  return {
    id: value.id,
    name: value.name,
    description: value.description,
    platform: value.platform,
    thumbnail: value.thumbnail,
    status: (0, _projectStatusEnum.transformProjectStatusEnumToJSON)(value.status),
    organization: value.organization && (0, _organizationSummary.transformOrganizationSummaryToJSON)(value.organization),
    rem_preferences: value.remPreferences && (0, _remPreferences.transformRemPreferencesToJSON)(value.remPreferences),
    workflow_status: value.workflowStatus && (0, _workflowStatus.transformWorkflowStatusToJSON)(value.workflowStatus),
    scene_url: value.sceneUrl,
    created: value.created,
    updated: value.updated,
    number_of_members: value.numberOfMembers,
    number_of_screens: value.numberOfScreens,
    number_of_components: value.numberOfComponents,
    number_of_connected_components: value.numberOfConnectedComponents,
    number_of_text_styles: value.numberOfTextStyles,
    number_of_colors: value.numberOfColors,
    number_of_spacing_tokens: value.numberOfSpacingTokens,
    linked_styleguide: value.linkedStyleguide && (0, _entityReference.transformEntityReferenceToJSON)(value.linkedStyleguide)
  };
};

exports.transformProjectToJSON = transformProjectToJSON;

var transformJSONToProject = function transformJSONToProject(value) {
  return {
    id: value.id,
    name: value.name,
    description: value.description,
    platform: value.platform,
    thumbnail: value.thumbnail,
    status: (0, _projectStatusEnum.transformJSONToProjectStatusEnum)(value.status),
    organization: value.organization && (0, _organizationSummary.transformJSONToOrganizationSummary)(value.organization),
    remPreferences: value.rem_preferences && (0, _remPreferences.transformJSONToRemPreferences)(value.rem_preferences),
    workflowStatus: value.workflow_status && (0, _workflowStatus.transformJSONToWorkflowStatus)(value.workflow_status),
    sceneUrl: value.scene_url,
    created: value.created,
    updated: value.updated,
    numberOfMembers: value.number_of_members,
    numberOfScreens: value.number_of_screens,
    numberOfComponents: value.number_of_components,
    numberOfConnectedComponents: value.number_of_connected_components,
    numberOfTextStyles: value.number_of_text_styles,
    numberOfColors: value.number_of_colors,
    numberOfSpacingTokens: value.number_of_spacing_tokens,
    linkedStyleguide: value.linked_styleguide && (0, _entityReference.transformJSONToEntityReference)(value.linked_styleguide)
  };
};
/**
 * 
 * @export
 * @interface Project
 */


exports.transformJSONToProject = transformJSONToProject;