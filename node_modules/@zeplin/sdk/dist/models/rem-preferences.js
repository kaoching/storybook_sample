"use strict";

require("core-js/modules/es.object.define-property.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformRemPreferencesToJSON = exports.transformJSONToRemPreferences = void 0;

var _disabledOrLinkedRemPreferences = require("./disabled-or-linked-rem-preferences");

var _enabledRemPreferences = require("./enabled-rem-preferences");

/* tslint:disable */

/* eslint-disable */

/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var transformJSONToRemPreferences = function transformJSONToRemPreferences(value) {
  switch (value.status) {
    case 'disabled':
      return (0, _disabledOrLinkedRemPreferences.transformJSONToDisabledOrLinkedRemPreferences)(value);

    case 'enabled':
      return (0, _enabledRemPreferences.transformJSONToEnabledRemPreferences)(value);

    case 'linked':
      return (0, _disabledOrLinkedRemPreferences.transformJSONToDisabledOrLinkedRemPreferences)(value);

    default:
      throw new Error("No variant of RemPreferences exists with 'status=".concat(value.status, "'"));
  }
};

exports.transformJSONToRemPreferences = transformJSONToRemPreferences;

var transformRemPreferencesToJSON = function transformRemPreferencesToJSON(value) {
  switch (value.status) {
    case 'disabled':
      return (0, _disabledOrLinkedRemPreferences.transformDisabledOrLinkedRemPreferencesToJSON)(value);

    case 'enabled':
      return (0, _enabledRemPreferences.transformEnabledRemPreferencesToJSON)(value);

    case 'linked':
      return (0, _disabledOrLinkedRemPreferences.transformDisabledOrLinkedRemPreferencesToJSON)(value);
  }
};
/**
 * @type RemPreferences
 * rem preferences of project or styleguide. The content of this property varies depending on the value of its status field.
 * @export
 */


exports.transformRemPreferencesToJSON = transformRemPreferencesToJSON;