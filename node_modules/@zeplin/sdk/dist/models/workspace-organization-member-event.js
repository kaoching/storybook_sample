"use strict";

require("core-js/modules/es.object.define-property.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformWorkspaceOrganizationMemberEventToJSON = exports.transformJSONToWorkspaceOrganizationMemberEvent = void 0;

var _workspaceOrganizationMemberInvitedEvent = require("./workspace-organization-member-invited-event");

var _workspaceOrganizationMemberRemovedEvent = require("./workspace-organization-member-removed-event");

var _workspaceOrganizationMemberRoleUpdatedEvent = require("./workspace-organization-member-role-updated-event");

var _workspaceOrganizationMemberTagUpdatedEvent = require("./workspace-organization-member-tag-updated-event");

/* tslint:disable */

/* eslint-disable */

/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var transformJSONToWorkspaceOrganizationMemberEvent = function transformJSONToWorkspaceOrganizationMemberEvent(value) {
  switch (value.action) {
    case 'invited':
      return (0, _workspaceOrganizationMemberInvitedEvent.transformJSONToWorkspaceOrganizationMemberInvitedEvent)(value);

    case 'removed':
      return (0, _workspaceOrganizationMemberRemovedEvent.transformJSONToWorkspaceOrganizationMemberRemovedEvent)(value);

    case 'role_updated':
      return (0, _workspaceOrganizationMemberRoleUpdatedEvent.transformJSONToWorkspaceOrganizationMemberRoleUpdatedEvent)(value);

    case 'tag_updated':
      return (0, _workspaceOrganizationMemberTagUpdatedEvent.transformJSONToWorkspaceOrganizationMemberTagUpdatedEvent)(value);

    default:
      throw new Error("No variant of WorkspaceOrganizationMemberEvent exists with 'action=".concat(value.action, "'"));
  }
};

exports.transformJSONToWorkspaceOrganizationMemberEvent = transformJSONToWorkspaceOrganizationMemberEvent;

var transformWorkspaceOrganizationMemberEventToJSON = function transformWorkspaceOrganizationMemberEventToJSON(value) {
  switch (value.action) {
    case 'invited':
      return (0, _workspaceOrganizationMemberInvitedEvent.transformWorkspaceOrganizationMemberInvitedEventToJSON)(value);

    case 'removed':
      return (0, _workspaceOrganizationMemberRemovedEvent.transformWorkspaceOrganizationMemberRemovedEventToJSON)(value);

    case 'role_updated':
      return (0, _workspaceOrganizationMemberRoleUpdatedEvent.transformWorkspaceOrganizationMemberRoleUpdatedEventToJSON)(value);

    case 'tag_updated':
      return (0, _workspaceOrganizationMemberTagUpdatedEvent.transformWorkspaceOrganizationMemberTagUpdatedEventToJSON)(value);
  }
};
/**
 * @type WorkspaceOrganizationMemberEvent
 * This event is used to notify webhooks about any of these activies related to the organization\'s members:    - New member added    - Member removed    - Member\'s role changed    - Member\'s tag changed 
 * @export
 */


exports.transformWorkspaceOrganizationMemberEventToJSON = transformWorkspaceOrganizationMemberEventToJSON;